import requests

proxy = {
    'http': 'rur2u.ru:80',
}
   
try:
    response = requests.get('https://api.openai.com', proxies=proxy)
    print("Connection successful")
except requests.exceptions.RequestException:
    print("Connection failed")


client = OpenAI(api_key='')

def gpt(text):
    completion = client.chat.completions.create(
    model = 'gpt-3.5-turbo',
    messages = [
        {"role": "system", "content" : "You are a bot assistant imitating a real person."},
        {'role': 'user', 'content': f'{text}'}
    ],
    temperature = 0.5
    )
    
    english_text = completion.choices[0].message.content
    
    return english_text


bot = telebot.TeleBot('6830160847:AAFFkCXdTAXsI8dj2A3PGk71XloMfmtUxdw')



url="https://rur2u.ru"

@bot.message_handler(commands=['start'])
def start(message):
    info = types.InlineKeyboardMarkup()
    webAppTest = types.WebAppInfo(url)
    info.add(types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å ‚ñ∂Ô∏èRuR2Uüá∑üá∫', web_app=webAppTest))
    info.add(types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å üí¨RuR2U AI', callback_data='AI'))
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RuRü§©\n\nüòçüá∑üá∫ RuR2U - –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –¢–µ–ª–µ–≥—Ä–∞–º –ø—Ä–æ –†–æ—Å–∏–∏—é!\n\n‚ñ∂Ô∏è –ß—Ç–æ –±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É START –≤–Ω–∏–∑—É!\n\nRuR2U - —ç—Ç–æ:\nüîπ–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –†–æ—Å—Å–∏—é\nüîπ–ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\nüîπ–°–∫–∏–¥–∫–∏ –æ—Ç –∫—Ä—É—Ç—ã—Ö –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∫–æ–º–ø–∞–Ω–∏–π\nüîπ–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –≥–æ—Ä–æ–¥–∞\nüîπ–°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\nüîπ–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ö–≤–∏–∑—ã\nüîπ–†–æ–∑—ã–≥—Ä—ã—à–∏ –ø–æ–¥–∞—Ä–∫–æ–≤\n–∏ –º–Ω–æ–≥–æ–µ-–º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n–ó–∞–ø—É—Å–∫–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å RuR2U –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å \nüîΩüîΩüîΩ', reply_markup=info)

@bot.callback_query_handler(func=lambda calback: True)
def callback_message(callback):
    if callback.data == 'AI':
        bot.send_message(callback.message.chat.id, '–î–æ–±—Ä—ã–π –¥–µ–Ω—å!\n–Ø –∏—Å–∫—É—Å—Å—Ç–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç RuR2U –∏ –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ –†–æ—Å—Å–∏—éüá∑üá∫.\n\n–ö–∞–∫–æ–π —É –≤–∞—Å –≤–æ–ø—Ä–æ—Å?')


@bot.message_handler()
def ai(message):
    bot.send_message(message.chat.id, '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç‚ôªÔ∏èüß†')
    bot.send_message(message.chat.id, f'{gpt(message)}')
    bot.delete_message(chat_id=message.chat.id, message_id=message.message_id + 1) 


bot.polling(none_stop=True)
